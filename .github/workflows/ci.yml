name: ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build files cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Coverage files cache
        uses: actions/cache@v3
        with:
          path: coverage-*.profraw
          key: ${{ runner.os }}-coverage-${{ hashFiles('**/coverage-*.profraw') }}
          restore-keys: ${{ runner.os }}-coverage

      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
            components: rustfmt, clippy, llvm-tools-preview

      - name: Check build
        uses: actions-rs/cargo@v1
        with:
          command: check

      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --check

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
        env:
          RUSTFLAGS: -C instrument-coverage
          LLVM_PROFILE_FILE: coverage-%p-%m.profraw

  coverage:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Recover coverage files from cache
        uses: actions/cache@v3
        with:
          path: coverage-*.profraw
          key: ${{ runner.os }}-coverage

      - name: Install coverage tool
        run: |
          wget https://github.com/feroldi/grcov/releases/download/v0.8.8-feroldi/grcov.tar.bz2 -O grcov.tar.bz2
          tar -xf grcov.tar.bz2

      - name: Collect coverage statistics
        run: ./grcov . --source-dir . --binary-path ./target/debug/ --llvm --branch --output-type html --output-path ./coverage

      - name: Publish coverage statistics
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.GH_ACCESS_TOKEN }}
        with:
          source-directory: 'coverage'
          destination-github-username: 'feroldi'
          destination-repository-name: 'atlas-coverage'
          target-branch: master
